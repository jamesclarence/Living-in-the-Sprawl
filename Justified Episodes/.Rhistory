lines <- grep('<strong><a href=\"/title/',theurl)
print(lines)
}
epURLs
function(season){
x <- lapply(season,unlist)
url <- getURL(x) # returns html for each of the five seasons
webpage <- readLines(tc <- textConnection(url)); close(tc) #reads html lines for every season
lines <- grep('<strong><a href=\"/title/',theurl)
print(lines)
}
x <- lapply(season,unlist)
url <- getURL(x) # returns html for each of the five seasons
webpage <- readLines(tc <- textConnection(url)); close(tc) #reads html lines for every season
lines <- grep('<strong><a href=\"/title/',theurl)
print(lines)
lines
lines <- grep('<strong><a href=\"/title/',url)
print(lines)
getURL("http://www.imdb.com/title/tt1489428/episodes?season=1")
ssn1 <- getURL("http://www.imdb.com/title/tt1489428/episodes?season=1")
ssn1lines <- readLines(tc <- textConnection(url)); close(tc)
grep('<strong><a href=\"/title/',ssn1lines)
ssn1lines[7648]
ssn1lines[7628]
lines
nrow(getURL(season))
nrow(getURL(x))
head(url)
nrow(url)
lines <- grep('<strong><a href=\"/title/',webpage)
lines
lines[[1]]
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
season <- c("http://www.imdb.com/title/tt1489428/episodes?season=1",
"http://www.imdb.com/title/tt1489428/episodes?season=2",
"http://www.imdb.com/title/tt1489428/episodes?season=3",
"http://www.imdb.com/title/tt1489428/episodes?season=4",
"http://www.imdb.com/title/tt1489428/episodes?season=5")
### Function 1: Find URL of each Justified Episode
# 1. Go to each web site in seasons object
# 2. Find html lines in each web site in seasons object
# 3. Get end of URL for each episode URL
# 4. Paste the end of URL for each episode URL with http://www.imdb.com
# 5. Put that URL into another object
#### THIS ONE WORKS
x <- lapply(season,unlist)
url <- getURL(x) # returns html for each of the five seasons
webpage <- readLines(tc <- textConnection(url)); close(tc) #reads html lines for every season
lines <- grep('<strong><a href=\"/title/',webpage)
lines <- data.frame(lines)
print(lines)
#### THIS ONE WORKS
### Watch out for the Sneak Peak episode before Season 5
### Takes lines object and get actual data from webpage
imdb <- "http://www.imdb.com"
#### THIS ONE WORKS
webpage <- as.data.frame(webpage)
pagedf <- webpage$webpage[lines$lines]
pagedf <- as.character(pagedf)
pagedf2 <- strsplit(pagedf,"\"")
pagedf3 <- unlist(pagedf2)
eplines <- grep('/title/',pagedf3)
eplines <- data.frame(eplines)
pagedf3 <- as.data.frame(pagedf3)
pagedf4 <- pagedf3$pagedf3[eplines$eplines]
pasteurl <- paste(imdb, pagedf4,sep="")
epURLs <- pasteurl
#### THIS ONE WORKS
### Scrape Each Episode Site
# For each url in epURLs, need:
# 1. Season and Episode Number
# 2. Rating
y <- lapply(epURLs,unlist)
y2 <- lapply(y,getURL)
dim(y2)
y2
getlines <- readLines(tc <- textConnection(y2)); close(tc)
y3 <- lapply(y2, getpage)
y3 <- readLines(tc <- textConnection(y2)); close(tc)
?readLines
head(y2)
nrow(y2)
y2 <- getURL(y)
y3 <- readLines(tc <- textConnection(y2)); close(tc)
epURLs
grep('<span class="nobr">Season',y3)
sandep <- grep('<span class="nobr">Season',y3)
sandep
sandep[1]
sandep <- data.frame(sandep)
head(sandep)
y3df <- as.data.frame(y3df)
y3df <- as.data.frame(y3)
y3df2 <- y3df$y3df[sandep$sandep]
y3df2
class(y3df)
class(sandep)
y3df$y3df[sandep$sandep]
head(y3df)
y3df2 <- y3df$y3[sandep$sandep]
y3df2
y3df3 <- strsplit(y3df2,'<span class="nobr">')
y3df2 <- as.character(y3df2)
y3df3 <- strsplit(y3df2,'<span class="nobr">')
y3df3
y3df3 <- gsub('<span class="nobr">',"",y3df2)
y3df3
y3df3 <- gsub('<span class="nobr">        ',"",y3df2)
y3df3
y3df3 <- gsub('        <span class="nobr">',"",y3df2)
y3df3
y3df3 <- gsub('^<span class="nobr">',"",y3df2)
y3df3
y3df3 <- gsub('        <span class="nobr">',"",y3df2)
y3df3
rateEp <- grep('title="Users rated this',y3)
rateEp
rateEp <- data.frame(rateEp)
y3rate <- y3rate$y3[rateEpp$rateEp]
y3rate2 <- as.character(y3rate)
y3rate <- y3df$y3[rateEpp$rateEp]
y3rate2 <- as.character(y3rate)
y3rate <- y3df$y3[rateEp$rateEp]
y3rate2 <- as.character(y3rate)
head(y3rate2)
gsub('title=\"Users rated this ',"",y3rate2)
y3rate4 <- gsub(') - click stars to rate\" >', y3rate3)
y3rate4 <- gsub(' - click stars to rate\" >', y3rate3)
y3rate3 <- gsub('title=\"Users rated this '|) - click stars to rate\" >'|'(',
"",y3rate2)
y3rate3 <- gsub('title=\"Users rated this |) - click stars to rate\" >|(',
"",y3rate2)
y3rate4 <- gsub(') - click stars to rate\" >|(',"", y3rate3)
y3rate3
y3rate3 <- gsub('title=\"Users rated this ',"",y3rate2)
y3rate4 <- gsub(') - click stars to rate\" >|(',"", y3rate3)
y3rate4 <- gsub(') - click stars to rate\" >',"", y3rate3)
y3rate5 <- gsub("(","", y3rate4)
y3rate5 <- gsub('(',"", y3rate4)
y3rate5 <- gsub(' ('," ", y3rate4)
y3rate5 <- gsub('\\(',"", y3rate4)
class(y3rate5)
y3ratedf <- data.frame(y3rate5)
y3ratedf
y3df3
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
class(y3df3)
y3df3 <- as.data.frame(gsub('        <span class="nobr">',"",y3df2))
class(y3df3)
y3df3
y3df3 <- gsub('        <span class="nobr">',"",y3df2)
gsub("[:alpha:]",y3df3)
gsub("[:alpha:]","",y3df3)
gsub([:alpha:],"",y3df3)
gsub('Season | Episode',"",y3df3)
SnEpSplit <- gsub('Season | Episode',"",y3df3)
SnEpSplit
strsplit(", ",SnEpSplit)
strsplit(SnEpSplit,", ")
SnEpSplit2 <- strsplit(SnEpSplit,", ")
colnames(dfSandEp) <- c("Season","Episode")
dfSandEp <- ldply(SnEpSplit2)
colnames(dfSandEp) <- c("Season","Episode")
dfSandEp
y3ratedf
gsub("/10 | votes",y3ratedf)
gsub("/10 | votes","",y3ratedf)
gsub("/10* | *votes","",y3ratedf)
gsub("\\/10* | *votes","",y3ratedf)
gsub("[/]10 | votes","",y3ratedf)
gsub("\\/,"",y3ratedf)
gsub("\\/","",y3ratedf)
y3ratedf
y3rate5 <- gsub('\\(',"", y3rate4)
gsub("\\/","",y3rate5)
gsub("\\/10 | votes","",y3rate5)
gsub("\\/10","",y3rate5)
rateSplit <- gsub("\\/10","",y3rate5)
gsub(" votes","", rateSplit2)
gsub(" votes","", rateSplit)
strsplit(rateSplit2," ")
rateSplit2 <- gsub(" votes","", rateSplit)
rateSplit3 <- strsplit(rateSplit2," ")
rateSplit3
dfRate <- ldply(rateSplit3)
colnames(dfRate) <- c("Rating","Votes")
dfRate
justified <- cbind(dfSandEp,dfRate)
justified
justified[-53]
justified[,-53]
justified[-53,]
justified[!53,]
justified <- justified[-53,]
ggplot(justified, aes(x=Episodes, y=Rating, group=Season)) +
geom_line()
ggplot(justified, aes(x=Episode, y=Rating, group=Season)) +
geom_line()
justified$Episode <- as.factor(justified$Episode)
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line()
class(justified$Episode)
justified <- cbind(dfSandEp,dfRate)
justified <- justified[-53,]
class(justified$Episode)
justified$Episode <- as.numeric(as.character(justified$Episode))
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating")
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_continuous(labels=Episode)
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_continuous(labels=Episode)
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating")
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_continuous(labels=Episode) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating")
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_continuous(breaks=Episode,labels=Episode) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating")
justified
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)")
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(limits=1:10)
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(limits=1:10) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(limits=(0,10))
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(limits=c(0,10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(limits=c(0,10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(breaks=seq(0,10,1)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
class(justified$Rating)
justified$Rating <- as.numeric(as.character(justified$Rating))
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(breaks=seq(0,10,1)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(limits=1:10) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_continuous(limits=c(1:10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted)") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(breaks=(0,10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(breaks=c(0,10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(breaks=c(5,10)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(limits=c(5, 10)breaks=seq(5,10,1)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
scale_y_discrete(limits=c(5, 10),breaks=seq(5,10,1)) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating, color=Season, group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
ylim(5,10) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
justified
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
cale_x_discrete(limits=1:13) +
ylim(5,10) +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
scale_x_discrete(limits=1:13) +
ylim(5,10) +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
geom_smooth()
scale_x_discrete(limits=1:13) +
ylim(5,10) +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(5,10) +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(5,10) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) Per Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Rating)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(5,10) +
labs(x="Episode of Season", y= "IMDb Episode Rating",
title = "Justified: IMDb Rating (Unweighted) by Episode of Season") +
theme_bw()
justified
getwd()
setwd("~/Documents/Blog/Living-in-the-Sprawl/Justified Episodes")
write.csv(justified, file = "justified imdb rankings.csv")
write.csv(justified, file = "justified imdb rankings.csv", row.names=F)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
ggplot(justified, aes(x=Episode, y=votes) +
geom_point()
ggplot(justified, aes(x=Episode, y=votes)) +
geom_point() +
geom_smooth()
ggplot(justified, aes(x=Episode, y=Votes)) +
geom_point() +
geom_smooth()
justified$Votes <- as.numeric(as.character(justified$Votes))
ggplot(justified, aes(x=Episode, y=Votes)) +
geom_point() +
geom_smooth()
ggplot(justified, aes(x=Episode, y=Votes)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(0,1000)
ggplot(justified, aes(x=Episode, y=Votes)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(0,1000) +
labs(x="Episode of Season", y= "Number of Votes",
title = "Justified: IMDb Rating Votes (Unweighted) by Episode of Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Votes)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(0,1000) +
labs(x="Episode of Season", y= "Number of Votes",
title = "Justified: IMDb Rating Votes (Unweighted) by Episode of Season") +
theme_bw() +
coord_flip()
ggplot(justified, aes(x=Episode, y=Votes,color=Season)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:13) +
ylim(0,1000) +
labs(x="Episode of Season", y= "Number of Votes",
title = "Justified: IMDb Rating Votes (Unweighted) by Episode of Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Votes,color=Season)) +
geom_point() +
scale_x_discrete(limits=1:13) +
ylim(0,1000) +
labs(x="Episode of Season", y= "Number of Votes",
title = "Justified: IMDb Rating Votes (Unweighted) by Episode of Season") +
theme_bw()
ggplot(justified, aes(x=Episode, y=Votes,color=Season,group=Season)) +
geom_line() +
scale_x_discrete(limits=1:13) +
ylim(0,1000) +
labs(x="Episode of Season", y= "Number of Votes",
title = "Justified: IMDb Rating Votes (Unweighted) by Episode of Season") +
theme_bw()
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth()
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
scale_x_discrete(limits=1:10) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(5,10) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(5,10) +
ylim(0,1000) +
coord_flip()
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(5,10) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(7,10) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(7.5,10) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(7.5,9.5) +
ylim(0,1000)
ggplot(justified, aes(x=Rating, y=Votes)) +
geom_point() +
geom_smooth() +
xlim(7.5,9) +
ylim(0,1000)
